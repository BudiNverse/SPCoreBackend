package models

import com.github.kittinunf.fuel.core.ResponseDeserializable
import com.google.gson.Gson
import database.Utils
import java.text.SimpleDateFormat
import kotlin.collections.ArrayList

/**
 *
 * StartTime and EndTime are in milliseconds since epoch
 */
interface ScheduleBlock {
    val id: String
    val location: String
    val startTime: Long
    val endTime: Long
}

/**
 * @param id                id is generated by md5(location + sum(startTime,endTime) )
 * @param moduleCode        eg. ST02777
 * @param moduleName        eg. DEUI
 * @param lessonType        eg. LAB
 * @param location          eg. T2253
 * @param startTime         eg. 1516590000 (time since epoch in milliseconds)
 * @param endTime           eg. 1516600800 (time since epoch in milliseconds)
 */

data class TimeTable(val arrayListOfLessons: ArrayList<Lesson>) {
    data class Lesson(override val id: String,
                      val moduleCode: String,
                      val moduleName: String,
                      val lessonType: String,
                      override val location: String,
                      override val startTime: Long,
                      override val endTime: Long) : ScheduleBlock
}


data class Event(override val id: String,
                 val title: String,
                 override val location: String,
                 override val startTime: Long,
                 override val endTime: Long,
                 val creator: User,
                 val deletedInvite: ArrayList<User> = arrayListOf(),
                 val going: ArrayList<User> = arrayListOf(),
                 val notGoing: ArrayList<User> = arrayListOf()) : ScheduleBlock

/**
 * TimetableFromSpice is only 1 day! It contains lessons that
 * student has on the day whereas Timetable object is lessons that the
 * student has on that particular month
 * @param timetable     ArrayList<Module>
 */
data class TimetableFromSpice(val timetable: ArrayList<Module>) {
    class Deserializer : ResponseDeserializable<TimetableFromSpice> {
        override fun deserialize(content: String) =
                Gson().fromJson(content, TimetableFromSpice::class.java)
    }

    data class Module(val module: LessonFromSpice)
    data class LessonFromSpice(val abbr: String,
                               val time: String,
                               val location: String,
                               val type: String,
                               val code: String)

}

fun TimetableFromSpice.Module.toLesson(dateString: String): TimeTable.Lesson? {
    val dateFormat = SimpleDateFormat("ddMMyy HH:mm")
    var startTimeEpoch:Long = 0
    var endTimeEpoch:Long = 0
    var lessonId: String = ""

    //null is a must because SP server returns null for weekends
    //and i dont want to make it a nullable field
    if(this.module.time != null){
        val startTimeStr = this.module.time.substring(0, 5)
        val endTimeStr = this.module.time.substring(6, 11)

        val startTimeDate = dateFormat.parse("$dateString $startTimeStr")
        startTimeEpoch = startTimeDate.time

        val endTimeDate = dateFormat.parse("$dateString $endTimeStr")
        endTimeEpoch = endTimeDate.time
        lessonId = Utils.md5("${this.module.location}${startTimeEpoch + endTimeEpoch}")
    }else{
        return null
    }

    return TimeTable.Lesson(
            id = lessonId,
            moduleCode = this.module.code,
            moduleName = this.module.abbr,
            lessonType = this.module.type,
            location = this.module.location,
            startTime = startTimeEpoch,
            endTime = endTimeEpoch
    )
}
